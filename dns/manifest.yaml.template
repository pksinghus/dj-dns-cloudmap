apiVersion: v1
kind: Namespace
metadata:
  labels:
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
  name: ${APP_NAMESPACE}
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: Mesh
metadata:
  name: ${MESH_NAME}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dj
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dj
      version: v1
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: ${MESH_NAME}
      labels:
        app: dj
        version: v1
    spec:
      containers:
        - name: dj
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          imagePullPolicy: Always
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "DJ Reporting for duty!"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metal-v1
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metal
      version: v1
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: ${MESH_NAME}
      labels:
        app: metal
        version: v1
    spec:
      containers:
        - name: metal
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          imagePullPolicy: Always
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "[\"Megadeth\",\"Judas Priest\"]"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jazz-v1
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jazz
      version: v1
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: ${MESH_NAME}
      labels:
        app: jazz
        version: v1
    spec:
      containers:
        - name: jazz
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          imagePullPolicy: Always
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "[\"Astrud Gilberto\",\"Miles Davis\"]"
---
apiVersion: v1
kind: Service
metadata:
  name: dj
  namespace: ${APP_NAMESPACE}
  labels:
    app: dj
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: dj
---
apiVersion: v1
kind: Service
metadata:
  name: metal-v1
  namespace: ${APP_NAMESPACE}
  labels:
    app: metal
    version: v1
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: metal
    version: v1
---
apiVersion: v1
kind: Service
metadata:
  name: jazz-v1
  namespace: ${APP_NAMESPACE}
  labels:
    app: jazz
    version: v1
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: jazz
    version: v1
---
apiVersion: v1
kind: Service
metadata:
  name: jazz
  namespace: ${APP_NAMESPACE}
  labels:
    app: jazz
spec:
  ports:
  - port: 9080
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: metal
  namespace: ${APP_NAMESPACE}
  labels:
    app: metal
spec:
  ports:
  - port: 9080
    name: http
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: dj
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: dj.${APP_NAMESPACE}.svc.cluster.local
  backends:
    - virtualService:
        virtualServiceName: jazz.${APP_NAMESPACE}.svc.cluster.local
    - virtualService:
        virtualServiceName: metal.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: jazz-v1
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: jazz-v1.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: metal-v1
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: metal-v1.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualService
metadata:
  name: jazz.${APP_NAMESPACE}.svc.cluster.local
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  virtualRouter:
    name: jazz-router
    listeners:
      - portMapping:
          port: 9080
          protocol: http
  routes:
    - name: jazz-route
      http:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeName: jazz-v1
              weight: 100
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualService
metadata:
  name: metal.${APP_NAMESPACE}.svc.cluster.local
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  virtualRouter:
    name: metal-router
    listeners:
      - portMapping:
          port: 9080
          protocol: http
  routes:
    - name: metal-route
      http:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeName: metal-v1
              weight: 100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jazz-v2
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jazz
      version: v2
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: ${MESH_NAME}
      labels:
        app: jazz
        version: v2
    spec:
      containers:
        - name: jazz
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "[\"Astrud Gilberto (Bahia, Brazil)\",\"Miles Davis (Alton, Illinois)\"]"
---
apiVersion: v1
kind: Service
metadata:
  name: jazz-v2
  namespace: ${APP_NAMESPACE}
  labels:
    app: jazz
    version: v2
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: jazz
    version: v2
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: jazz-v2
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: jazz-v2.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metal-v2
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metal
      version: v2
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/mesh: ${MESH_NAME}
      labels:
        app: metal
        version: v2
    spec:
      containers:
        - name: metal
          image: "672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0"
          ports:
            - containerPort: 9080
          env:
            - name: "HW_RESPONSE"
              value: "[\"Megadeth (Los Angeles, California)\",\"Judas Priest (West Bromwich, England)\"]"
---
apiVersion: v1
kind: Service
metadata:
  name: metal-v2
  namespace: ${APP_NAMESPACE}
  labels:
    app: metal
    version: v2
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: metal
    version: v2
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: metal-v2
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: metal-v2.${APP_NAMESPACE}.svc.cluster.local
